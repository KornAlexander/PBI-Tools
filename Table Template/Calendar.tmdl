table Calendar
	lineageTag: 24a3bb60-7b9d-4b6e-90b2-2d808a3fcd31
	dataCategory: Time

	column Date
		dataType: dateTime
		isKey
		formatString: Long Date
		lineageTag: ea8064f8-8d2c-46f8-8e7e-0fb2f68aa863
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Year
		dataType: int64
		formatString: 0
		lineageTag: 452f135a-188c-4ba9-9be7-86b009fe94e6
		summarizeBy: sum
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column Month
		dataType: int64
		formatString: 0
		lineageTag: b54f104a-9fd5-4b22-82e8-98fcb215448f
		summarizeBy: sum
		sourceColumn: Month

		annotation SummarizationSetBy = Automatic

	column Day
		dataType: int64
		formatString: 0
		lineageTag: 66e4621f-027e-4893-bd88-bc743beeccd2
		summarizeBy: sum
		sourceColumn: Day

		annotation SummarizationSetBy = Automatic

	column 'Day Name'
		dataType: string
		lineageTag: 9e65890a-dc34-4289-b645-60abbc66acf7
		summarizeBy: none
		sourceColumn: Day Name

		annotation SummarizationSetBy = Automatic

	column 'Day of Week'
		dataType: int64
		formatString: 0
		lineageTag: 3d3a1259-db22-40b9-b03d-41311d98ec09
		summarizeBy: sum
		sourceColumn: Day of Week

		annotation SummarizationSetBy = Automatic

	column 'Day of Year'
		dataType: int64
		formatString: 0
		lineageTag: 073433d4-2e8a-4f9e-bdea-55f90b066734
		summarizeBy: sum
		sourceColumn: Day of Year

		annotation SummarizationSetBy = Automatic

	column 'Month Name'
		dataType: string
		lineageTag: 5f962734-7cf4-469b-9e74-8b3cb79ecf2c
		summarizeBy: none
		sourceColumn: Month Name

		annotation SummarizationSetBy = Automatic

	column Quarter
		dataType: int64
		formatString: 0
		lineageTag: 54b2616c-bc19-470f-92d2-8b08abd867cf
		summarizeBy: sum
		sourceColumn: Quarter

		annotation SummarizationSetBy = Automatic

	column 'Week of Year'
		dataType: int64
		formatString: 0
		lineageTag: 0a5429ea-e100-4e00-8eff-0f85929fce24
		summarizeBy: sum
		sourceColumn: Week of Year

		annotation SummarizationSetBy = Automatic

	column Year-Month
		dataType: string
		lineageTag: 06f45981-4db9-4c10-893d-2c4493966360
		summarizeBy: none
		sourceColumn: Year-Month

		annotation SummarizationSetBy = Automatic

	column 'Year-Month Code'
		dataType: int64
		formatString: 0
		lineageTag: b36b09bc-0480-413c-9ae0-d25ed739f293
		summarizeBy: count
		sourceColumn: Year-Month Code

		annotation SummarizationSetBy = Automatic

	column 'Month Name Short'
		dataType: string
		lineageTag: 99860d2d-4d04-4a7f-a250-698d0f7b113f
		summarizeBy: none
		sourceColumn: Month Name Short
		sortByColumn: Month

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	partition Calendar = m
		mode: import
		source =
				let
				    // configurations start
				    Today=Date.From(DateTime.LocalNow()), // today's date
				    FromYear = 2018, // set the start year of the date dimension. dates start from 1st of January of this year
				    ToYear=2025, // set the end year of the date dimension. dates end at 31st of December of this year
				    StartofFiscalYear=7, // set the month number that is start of the financial year. example; if fiscal year start is July, value is 7
				    firstDayofWeek=Day.Monday, // set the week's start day, values: Day.Monday, Day.Sunday....
				    // configuration end
				    FromDate=#date(FromYear,1,1),
				    ToDate=#date(ToYear,12,31),
				    Source=List.Dates(
				        FromDate,
				        Duration.Days(ToDate-FromDate)+1,
				        #duration(1,0,0,0)
				    ),
				    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				    #"Renamed Columns" = Table.RenameColumns(#"Converted to Table",{{"Column1", "Date"}}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Date", type date}}),
				    #"Inserted Year" = Table.AddColumn(#"Changed Type", "Year", each Date.Year([Date]), Int64.Type),
				    #"Inserted Start of Year" = Table.AddColumn(#"Inserted Year", "Start of Year", each Date.StartOfYear([Date]), type date),
				    #"Inserted End of Year" = Table.AddColumn(#"Inserted Start of Year", "End of Year", each Date.EndOfYear([Date]), type date),
				    #"Inserted Month" = Table.AddColumn(#"Inserted End of Year", "Month", each Date.Month([Date]), Int64.Type),
				    #"Inserted Start of Month" = Table.AddColumn(#"Inserted Month", "Start of Month", each Date.StartOfMonth([Date]), type date),
				    #"Inserted End of Month" = Table.AddColumn(#"Inserted Start of Month", "End of Month", each Date.EndOfMonth([Date]), type date),
				    #"Inserted Days in Month" = Table.AddColumn(#"Inserted End of Month", "Days in Month", each Date.DaysInMonth([Date]), Int64.Type),
				    #"Inserted Day" = Table.AddColumn(#"Inserted Days in Month", "Day", each Date.Day([Date]), Int64.Type),
				    #"Inserted Day Name" = Table.AddColumn(#"Inserted Day", "Day Name", each Date.DayOfWeekName([Date]), type text),
				    #"Inserted Day of Week" = Table.AddColumn(#"Inserted Day Name", "Day of Week", each Date.DayOfWeek([Date],firstDayofWeek), Int64.Type),
				    #"Inserted Day of Year" = Table.AddColumn(#"Inserted Day of Week", "Day of Year", each Date.DayOfYear([Date]), Int64.Type),
				    #"Inserted Month Name" = Table.AddColumn(#"Inserted Day of Year", "Month Name", each Date.MonthName([Date]), type text),
				    #"Inserted Quarter" = Table.AddColumn(#"Inserted Month Name", "Quarter", each Date.QuarterOfYear([Date]), Int64.Type),
				    #"Inserted Start of Quarter" = Table.AddColumn(#"Inserted Quarter", "Start of Quarter", each Date.StartOfQuarter([Date]), type date),
				    #"Inserted End of Quarter" = Table.AddColumn(#"Inserted Start of Quarter", "End of Quarter", each Date.EndOfQuarter([Date]), type date),
				    #"Inserted Week of Year" = Table.AddColumn(#"Inserted End of Quarter", "Week of Year", each Date.WeekOfYear([Date],firstDayofWeek), Int64.Type),
				    #"Inserted Week of Month" = Table.AddColumn(#"Inserted Week of Year", "Week of Month", each Date.WeekOfMonth([Date],firstDayofWeek), Int64.Type),
				    #"Inserted Start of Week" = Table.AddColumn(#"Inserted Week of Month", "Start of Week", each Date.StartOfWeek([Date],firstDayofWeek), type date),
				    #"Inserted End of Week" = Table.AddColumn(#"Inserted Start of Week", "End of Week", each Date.EndOfWeek([Date],firstDayofWeek), type date),
				    FiscalMonthBaseIndex=13-StartofFiscalYear,
				    adjustedFiscalMonthBaseIndex=if(FiscalMonthBaseIndex>=12 or FiscalMonthBaseIndex<0) then 0 else FiscalMonthBaseIndex,
				    #"Added Custom" = Table.AddColumn(#"Inserted End of Week", "FiscalBaseDate", each Date.AddMonths([Date],adjustedFiscalMonthBaseIndex)),
				    #"Changed Type1" = Table.TransformColumnTypes(#"Added Custom",{{"FiscalBaseDate", type date}}),
				    #"Inserted Year1" = Table.AddColumn(#"Changed Type1", "Year.1", each Date.Year([FiscalBaseDate]), Int64.Type),
				    #"Renamed Columns1" = Table.RenameColumns(#"Inserted Year1",{{"Year.1", "Fiscal Year"}}),
				    #"Inserted Quarter1" = Table.AddColumn(#"Renamed Columns1", "Quarter.1", each Date.QuarterOfYear([FiscalBaseDate]), Int64.Type),
				    #"Renamed Columns2" = Table.RenameColumns(#"Inserted Quarter1",{{"Quarter.1", "Fiscal Quarter"}}),
				    #"Inserted Month1" = Table.AddColumn(#"Renamed Columns2", "Month.1", each Date.Month([FiscalBaseDate]), Int64.Type),
				    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Month1",{{"Month.1", "Fiscal Month"}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns3",{"FiscalBaseDate"}),
				    #"Inserted Age" = Table.AddColumn(#"Removed Columns", "Age", each [Date]-Today, type duration),
				    #"Extracted Days" = Table.TransformColumns(#"Inserted Age",{{"Age", Duration.Days, Int64.Type}}),
				    #"Renamed Columns4" = Table.RenameColumns(#"Extracted Days",{{"Age", "Day Offset"}}),
				    #"Added Custom1" = Table.AddColumn(#"Renamed Columns4", "Month Offset", each (([Year]-Date.Year(Today))*12)
				+([Month]-Date.Month(Today))),
				    #"Changed Type2" = Table.TransformColumnTypes(#"Added Custom1",{{"Month Offset", Int64.Type}}),
				    #"Added Custom2" = Table.AddColumn(#"Changed Type2", "Year Offset", each [Year]-Date.Year(Today)),
				    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom2",{{"Year Offset", Int64.Type}}),
				    #"Added Custom3" = Table.AddColumn(#"Changed Type3", "Quarter Offset", each (([Year]-Date.Year(Today))*4)
				+([Quarter]-Date.QuarterOfYear(Today))),
				    #"Changed Type4" = Table.TransformColumnTypes(#"Added Custom3",{{"Quarter Offset", Int64.Type}}),
				    #"Added Custom4" = Table.AddColumn(#"Changed Type4", "Year-Month", each Date.ToText([Date],"yyyy MMM")),
				    #"Added Custom5" = Table.AddColumn(#"Added Custom4", "Year-Month Code", each Date.ToText([Date],"yyyyMM")),
				    #"Added Custom6" = Table.AddColumn(#"Added Custom5", "Month Name Short", each Date.ToText([Date],"MMM")),
				    #"Removed Columns1" = Table.RemoveColumns(#"Added Custom6",{"Fiscal Year", "Fiscal Quarter", "Fiscal Month", "Day Offset", "Month Offset", "Year Offset", "Quarter Offset", "Start of Week", "End of Week", "Week of Month", "Start of Quarter", "End of Quarter", "Days in Month", "Start of Month", "End of Month", "Start of Year", "End of Year"}),
				    #"Changed Type5" = Table.TransformColumnTypes(#"Removed Columns1",{{"Year-Month", type text}, {"Year-Month Code", Int64.Type}}),
				    #"Renamed Columns5" = Table.RenameColumns(#"Changed Type5",{{"Date", "Date"}})
				in
				    #"Renamed Columns5"

	annotation PBI_ResultType = Table

